// <auto-generated />
using System;
using ListaPrzebojow.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(ListaPrzebojowContext))]
    [Migration("20230328163302_test1")]
    partial class test1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DAL.Album", b =>
                {
                    b.Property<int>("AlbumID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AlbumID"));

                    b.Property<int?>("ArtystaID")
                        .HasColumnType("int");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PiosenkiPiosenkaID")
                        .HasColumnType("int");

                    b.HasKey("AlbumID");

                    b.HasIndex("ArtystaID");

                    b.HasIndex("PiosenkiPiosenkaID");

                    b.ToTable("Album");
                });

            modelBuilder.Entity("DAL.Artysta", b =>
                {
                    b.Property<int>("ArtystaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ArtystaID"));

                    b.Property<int>("AlbumID")
                        .HasColumnType("int");

                    b.Property<int?>("ArtystaID1")
                        .HasColumnType("int");

                    b.HasKey("ArtystaID");

                    b.HasIndex("AlbumID");

                    b.HasIndex("ArtystaID1");

                    b.ToTable("Artysta");
                });

            modelBuilder.Entity("DAL.Chart", b =>
                {
                    b.Property<int>("ChartID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ChartID"));

                    b.Property<int>("ChartAlbumowID")
                        .HasColumnType("int");

                    b.HasKey("ChartID");

                    b.ToTable("Chart");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("DAL.ChartPiosenek", b =>
                {
                    b.Property<int>("ChartPiosenekID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ChartPiosenekID"));

                    b.Property<int?>("ChartID1")
                        .HasColumnType("int");

                    b.HasKey("ChartPiosenekID");

                    b.HasIndex("ChartID1");

                    b.ToTable("ChartPiosenek");
                });

            modelBuilder.Entity("DAL.Piosenka", b =>
                {
                    b.Property<int>("PiosenkaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PiosenkaID"));

                    b.HasKey("PiosenkaID");

                    b.ToTable("Piosenka");
                });

            modelBuilder.Entity("DAL.PiosenkaNaCharcie", b =>
                {
                    b.Property<int>("ChartID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ChartID"));

                    b.Property<int>("ChartPiosenekID")
                        .HasColumnType("int");

                    b.Property<int>("PiosenkaID")
                        .HasColumnType("int");

                    b.HasKey("ChartID");

                    b.HasIndex("ChartPiosenekID");

                    b.HasIndex("PiosenkaID");

                    b.ToTable("PiosenkaNaCharcie");
                });

            modelBuilder.Entity("DAL.Playlista", b =>
                {
                    b.Property<int>("PlaylistaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlaylistaID"));

                    b.HasKey("PlaylistaID");

                    b.ToTable("Playlista");
                });

            modelBuilder.Entity("ListaPrzebojow.DAL.AlbumNaCharcie", b =>
                {
                    b.Property<int>("AlbumNaCharcieID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AlbumNaCharcieID"));

                    b.Property<int>("AlbumID")
                        .HasColumnType("int");

                    b.Property<int>("ChartAlbumowID")
                        .HasColumnType("int");

                    b.HasKey("AlbumNaCharcieID");

                    b.HasIndex("AlbumID");

                    b.HasIndex("ChartAlbumowID");

                    b.ToTable("AlbumNaCharcie");
                });

            modelBuilder.Entity("ListaPrzebojow.DAL.PiosenkaNaPlayliscie", b =>
                {
                    b.Property<int>("PiosenkaNaPlayliscieID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PiosenkaNaPlayliscieID"));

                    b.Property<int>("PiosenkaID")
                        .HasColumnType("int");

                    b.Property<int>("PlaylistaID")
                        .HasColumnType("int");

                    b.HasKey("PiosenkaNaPlayliscieID");

                    b.HasIndex("PiosenkaID");

                    b.HasIndex("PlaylistaID");

                    b.ToTable("PiosenkaNaPlayliscie");
                });

            modelBuilder.Entity("DAL.ChartAlbumow", b =>
                {
                    b.HasBaseType("DAL.Chart");

                    b.ToTable("ChartAlbumow");
                });

            modelBuilder.Entity("DAL.Album", b =>
                {
                    b.HasOne("DAL.Artysta", null)
                        .WithMany("Albumy")
                        .HasForeignKey("ArtystaID");

                    b.HasOne("DAL.Piosenka", "Piosenki")
                        .WithMany("AlbumCol")
                        .HasForeignKey("PiosenkiPiosenkaID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Piosenki");
                });

            modelBuilder.Entity("DAL.Artysta", b =>
                {
                    b.HasOne("DAL.Album", "album")
                        .WithMany("ArtysciCol")
                        .HasForeignKey("AlbumID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Artysta", "artysta")
                        .WithMany()
                        .HasForeignKey("ArtystaID1");

                    b.Navigation("album");

                    b.Navigation("artysta");
                });

            modelBuilder.Entity("DAL.ChartPiosenek", b =>
                {
                    b.HasOne("DAL.Chart", "chart")
                        .WithMany()
                        .HasForeignKey("ChartID1");

                    b.Navigation("chart");
                });

            modelBuilder.Entity("DAL.PiosenkaNaCharcie", b =>
                {
                    b.HasOne("DAL.ChartPiosenek", "chartPiosenek")
                        .WithMany("PiosenkaNaCharcieCol")
                        .HasForeignKey("ChartPiosenekID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Piosenka", "piosenka")
                        .WithMany("PiosenkaNaCharcieCol")
                        .HasForeignKey("PiosenkaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("chartPiosenek");

                    b.Navigation("piosenka");
                });

            modelBuilder.Entity("ListaPrzebojow.DAL.AlbumNaCharcie", b =>
                {
                    b.HasOne("DAL.Album", "album")
                        .WithMany("AlbumNaCharcieCol")
                        .HasForeignKey("AlbumID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.ChartAlbumow", "chartAlbumow")
                        .WithMany("AlbumNaCharcieCol")
                        .HasForeignKey("ChartAlbumowID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("album");

                    b.Navigation("chartAlbumow");
                });

            modelBuilder.Entity("ListaPrzebojow.DAL.PiosenkaNaPlayliscie", b =>
                {
                    b.HasOne("DAL.Piosenka", "piosenka")
                        .WithMany("PiosenkaNaPlayliscieCol")
                        .HasForeignKey("PiosenkaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Playlista", "playlista")
                        .WithMany("PiosenkaNaPlayliscieCol")
                        .HasForeignKey("PlaylistaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("piosenka");

                    b.Navigation("playlista");
                });

            modelBuilder.Entity("DAL.ChartAlbumow", b =>
                {
                    b.HasOne("DAL.Chart", null)
                        .WithOne()
                        .HasForeignKey("DAL.ChartAlbumow", "ChartID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DAL.Album", b =>
                {
                    b.Navigation("AlbumNaCharcieCol");

                    b.Navigation("ArtysciCol");
                });

            modelBuilder.Entity("DAL.Artysta", b =>
                {
                    b.Navigation("Albumy");
                });

            modelBuilder.Entity("DAL.ChartPiosenek", b =>
                {
                    b.Navigation("PiosenkaNaCharcieCol");
                });

            modelBuilder.Entity("DAL.Piosenka", b =>
                {
                    b.Navigation("AlbumCol");

                    b.Navigation("PiosenkaNaCharcieCol");

                    b.Navigation("PiosenkaNaPlayliscieCol");
                });

            modelBuilder.Entity("DAL.Playlista", b =>
                {
                    b.Navigation("PiosenkaNaPlayliscieCol");
                });

            modelBuilder.Entity("DAL.ChartAlbumow", b =>
                {
                    b.Navigation("AlbumNaCharcieCol");
                });
#pragma warning restore 612, 618
        }
    }
}
