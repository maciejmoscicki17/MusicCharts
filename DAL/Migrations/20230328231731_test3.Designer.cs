// <auto-generated />
using System;
using ListaPrzebojow.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(ListaPrzebojowContext))]
    [Migration("20230328231731_test3")]
    partial class test3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DAL.Album", b =>
                {
                    b.Property<int>("AlbumID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AlbumID"));

                    b.Property<int>("ArtystaID")
                        .HasColumnType("int");

                    b.Property<int?>("ChartAlbumowID")
                        .HasColumnType("int");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PiosenkaID")
                        .HasColumnType("int");

                    b.HasKey("AlbumID");

                    b.HasIndex("ArtystaID");

                    b.HasIndex("ChartAlbumowID");

                    b.HasIndex("PiosenkaID");

                    b.ToTable("Album");

                    b.HasData(
                        new
                        {
                            AlbumID = 1,
                            ArtystaID = 1,
                            Nazwa = "Album 1"
                        },
                        new
                        {
                            AlbumID = 2,
                            ArtystaID = 1,
                            Nazwa = "Album 2"
                        },
                        new
                        {
                            AlbumID = 3,
                            ArtystaID = 2,
                            Nazwa = "Album 3"
                        });
                });

            modelBuilder.Entity("DAL.Artysta", b =>
                {
                    b.Property<int>("ArtystaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ArtystaID"));

                    b.Property<int?>("AlbumID")
                        .HasColumnType("int");

                    b.Property<string>("Pseudonim")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SluchaczeWMiesiacu")
                        .HasColumnType("int");

                    b.HasKey("ArtystaID");

                    b.HasIndex("AlbumID");

                    b.ToTable("Artysta");

                    b.HasData(
                        new
                        {
                            ArtystaID = 1,
                            Pseudonim = "Artysta 1",
                            SluchaczeWMiesiacu = 1000
                        },
                        new
                        {
                            ArtystaID = 2,
                            Pseudonim = "Artysta 2",
                            SluchaczeWMiesiacu = 500
                        });
                });

            modelBuilder.Entity("DAL.Chart", b =>
                {
                    b.Property<int>("ChartID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ChartID"));

                    b.Property<int>("ChartAlbumowID")
                        .HasColumnType("int");

                    b.HasKey("ChartID");

                    b.ToTable("Chart");

                    b.HasData(
                        new
                        {
                            ChartID = 1,
                            ChartAlbumowID = 0
                        });
                });

            modelBuilder.Entity("DAL.ChartAlbumow", b =>
                {
                    b.Property<int>("ChartAlbumowID")
                        .HasColumnType("int");

                    b.Property<int>("ChartID")
                        .HasColumnType("int");

                    b.HasKey("ChartAlbumowID");

                    b.ToTable("ChartAlbumow");

                    b.HasData(
                        new
                        {
                            ChartAlbumowID = 1,
                            ChartID = 1
                        });
                });

            modelBuilder.Entity("DAL.ChartPiosenek", b =>
                {
                    b.Property<int>("ChartPiosenekID")
                        .HasColumnType("int");

                    b.Property<int>("ChartID")
                        .HasColumnType("int");

                    b.HasKey("ChartPiosenekID");

                    b.ToTable("ChartPiosenek");

                    b.HasData(
                        new
                        {
                            ChartPiosenekID = 1,
                            ChartID = 1
                        });
                });

            modelBuilder.Entity("DAL.Piosenka", b =>
                {
                    b.Property<int>("PiosenkaID")
                        .HasColumnType("int");

                    b.Property<int>("AlbumID")
                        .HasColumnType("int");

                    b.Property<int>("ArtystaID")
                        .HasColumnType("int");

                    b.Property<int?>("ChartPiosenekID")
                        .HasColumnType("int");

                    b.Property<string>("Gatunek")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IleOdsluchan")
                        .HasColumnType("int");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PlaylistaID")
                        .HasColumnType("int");

                    b.HasKey("PiosenkaID");

                    b.HasIndex("ArtystaID");

                    b.HasIndex("ChartPiosenekID");

                    b.HasIndex("PlaylistaID");

                    b.ToTable("Piosenka");

                    b.HasData(
                        new
                        {
                            PiosenkaID = 1,
                            AlbumID = 1,
                            ArtystaID = 1,
                            Gatunek = "Rock",
                            IleOdsluchan = 0,
                            Nazwa = "Piosenka 1"
                        },
                        new
                        {
                            PiosenkaID = 2,
                            AlbumID = 1,
                            ArtystaID = 1,
                            Gatunek = "Rock",
                            IleOdsluchan = 0,
                            Nazwa = "Piosenka 2"
                        },
                        new
                        {
                            PiosenkaID = 3,
                            AlbumID = 3,
                            ArtystaID = 2,
                            Gatunek = "Pop",
                            IleOdsluchan = 0,
                            Nazwa = "Piosenka 3"
                        });
                });

            modelBuilder.Entity("DAL.PiosenkaNaCharcie", b =>
                {
                    b.Property<int>("PiosenkaID")
                        .HasColumnType("int");

                    b.Property<int>("ChartPiosenekID")
                        .HasColumnType("int");

                    b.Property<int>("PozycjaPiosenki")
                        .HasColumnType("int");

                    b.HasKey("PiosenkaID", "ChartPiosenekID");

                    b.HasIndex("ChartPiosenekID");

                    b.ToTable("PiosenkaNaCharcie");
                });

            modelBuilder.Entity("DAL.Playlista", b =>
                {
                    b.Property<int>("PlaylistaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlaylistaID"));

                    b.Property<string>("Gatunek")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PlaylistaID");

                    b.ToTable("Playlista");

                    b.HasData(
                        new
                        {
                            PlaylistaID = 1,
                            Gatunek = "Rock"
                        });
                });

            modelBuilder.Entity("ListaPrzebojow.DAL.AlbumNaCharcie", b =>
                {
                    b.Property<int>("AlbumID")
                        .HasColumnType("int");

                    b.Property<int>("ChartAlbumowID")
                        .HasColumnType("int");

                    b.HasKey("AlbumID", "ChartAlbumowID");

                    b.HasIndex("ChartAlbumowID");

                    b.ToTable("AlbumNaCharcie");
                });

            modelBuilder.Entity("ListaPrzebojow.DAL.PiosenkaNaPlayliscie", b =>
                {
                    b.Property<int>("PiosenkaID")
                        .HasColumnType("int");

                    b.Property<int>("PlaylistaID")
                        .HasColumnType("int");

                    b.HasKey("PiosenkaID", "PlaylistaID");

                    b.HasIndex("PlaylistaID");

                    b.ToTable("PiosenkaNaPlayliscie");
                });

            modelBuilder.Entity("DAL.Album", b =>
                {
                    b.HasOne("DAL.Artysta", "Artysta")
                        .WithMany("album")
                        .HasForeignKey("ArtystaID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DAL.ChartAlbumow", null)
                        .WithMany("albumy")
                        .HasForeignKey("ChartAlbumowID");

                    b.HasOne("DAL.Piosenka", null)
                        .WithMany("AlbumCol")
                        .HasForeignKey("PiosenkaID");

                    b.Navigation("Artysta");
                });

            modelBuilder.Entity("DAL.Artysta", b =>
                {
                    b.HasOne("DAL.Album", null)
                        .WithMany("artystaCol")
                        .HasForeignKey("AlbumID");
                });

            modelBuilder.Entity("DAL.ChartAlbumow", b =>
                {
                    b.HasOne("DAL.Chart", "chart")
                        .WithOne("chartAlbumow")
                        .HasForeignKey("DAL.ChartAlbumow", "ChartAlbumowID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("chart");
                });

            modelBuilder.Entity("DAL.ChartPiosenek", b =>
                {
                    b.HasOne("DAL.Chart", "chart")
                        .WithOne("chartPiosenek")
                        .HasForeignKey("DAL.ChartPiosenek", "ChartPiosenekID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("chart");
                });

            modelBuilder.Entity("DAL.Piosenka", b =>
                {
                    b.HasOne("DAL.Artysta", "Artysta")
                        .WithMany()
                        .HasForeignKey("ArtystaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.ChartPiosenek", null)
                        .WithMany("piosenki")
                        .HasForeignKey("ChartPiosenekID");

                    b.HasOne("DAL.Album", "Album")
                        .WithMany("piosenkiCol")
                        .HasForeignKey("PiosenkaID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DAL.Playlista", null)
                        .WithMany("piosenkaCol")
                        .HasForeignKey("PlaylistaID");

                    b.Navigation("Album");

                    b.Navigation("Artysta");
                });

            modelBuilder.Entity("DAL.PiosenkaNaCharcie", b =>
                {
                    b.HasOne("DAL.ChartPiosenek", "chartPiosenek")
                        .WithMany("PiosenkaNaCharcieCol")
                        .HasForeignKey("ChartPiosenekID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DAL.Piosenka", "piosenka")
                        .WithMany("PiosenkaNaCharcieCol")
                        .HasForeignKey("PiosenkaID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("chartPiosenek");

                    b.Navigation("piosenka");
                });

            modelBuilder.Entity("ListaPrzebojow.DAL.AlbumNaCharcie", b =>
                {
                    b.HasOne("DAL.Album", "album")
                        .WithMany("AlbumNaCharcieCol")
                        .HasForeignKey("AlbumID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DAL.ChartAlbumow", "chartAlbumow")
                        .WithMany("AlbumNaCharcieCol")
                        .HasForeignKey("ChartAlbumowID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("album");

                    b.Navigation("chartAlbumow");
                });

            modelBuilder.Entity("ListaPrzebojow.DAL.PiosenkaNaPlayliscie", b =>
                {
                    b.HasOne("DAL.Piosenka", "piosenka")
                        .WithMany("PiosenkaNaPlayliscieCol")
                        .HasForeignKey("PiosenkaID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DAL.Playlista", "playlista")
                        .WithMany("PiosenkaNaPlayliscieCol")
                        .HasForeignKey("PlaylistaID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("piosenka");

                    b.Navigation("playlista");
                });

            modelBuilder.Entity("DAL.Album", b =>
                {
                    b.Navigation("AlbumNaCharcieCol");

                    b.Navigation("artystaCol");

                    b.Navigation("piosenkiCol");
                });

            modelBuilder.Entity("DAL.Artysta", b =>
                {
                    b.Navigation("album");
                });

            modelBuilder.Entity("DAL.Chart", b =>
                {
                    b.Navigation("chartAlbumow")
                        .IsRequired();

                    b.Navigation("chartPiosenek")
                        .IsRequired();
                });

            modelBuilder.Entity("DAL.ChartAlbumow", b =>
                {
                    b.Navigation("AlbumNaCharcieCol");

                    b.Navigation("albumy");
                });

            modelBuilder.Entity("DAL.ChartPiosenek", b =>
                {
                    b.Navigation("PiosenkaNaCharcieCol");

                    b.Navigation("piosenki");
                });

            modelBuilder.Entity("DAL.Piosenka", b =>
                {
                    b.Navigation("AlbumCol");

                    b.Navigation("PiosenkaNaCharcieCol");

                    b.Navigation("PiosenkaNaPlayliscieCol");
                });

            modelBuilder.Entity("DAL.Playlista", b =>
                {
                    b.Navigation("PiosenkaNaPlayliscieCol");

                    b.Navigation("piosenkaCol");
                });
#pragma warning restore 612, 618
        }
    }
}
